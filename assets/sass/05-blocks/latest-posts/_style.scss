.wp-block-latest-posts {
	padding-left: 0;

	// Vertical margins logic
	&:not(.is-grid) > li {
		margin-top: rem(24px);
		margin-bottom: rem(24px);

		&:first-child {
			margin-top: 0;
		}

		&:last-child {
			margin-bottom: 0;
		}
	}

	&.is-grid {
		word-wrap: break-word;
		word-break: break-word;

		> li {
			margin-bottom: rem(32px);

			&:last-child {
				margin-bottom: 0;
			}
		}

		// Remove bottom margins in grid columns
		&.columns-2 > li:nth-last-child(-n + 2):nth-child(2n + 1),
		&.columns-2 > li:nth-last-child(-n + 2):nth-child(2n + 1) ~ li,
		&.columns-3 > li:nth-last-child(-n + 3):nth-child(3n + 1),
		&.columns-3 > li:nth-last-child(-n + 3):nth-child(3n + 1) ~ li,
		&.columns-4 > li:nth-last-child(-n + 4):nth-child(4n + 1),
		&.columns-4 > li:nth-last-child(-n + 4):nth-child(4n + 1) ~ li,
		&.columns-5 > li:nth-last-child(-n + 5):nth-child(5n + 1),
		&.columns-5 > li:nth-last-child(-n + 5):nth-child(5n + 1) ~ li,
		&.columns-6 > li:nth-last-child(-n + 6):nth-child(6n + 1),
		&.columns-6 > li:nth-last-child(-n + 6):nth-child(6n + 1) ~ li {
			margin-bottom: 0;
		}
	}

	> li > * {
		margin-top: rem(32px);
		margin-bottom: rem(32px);

		&:first-child {
			margin-top: 0;
		}

		&:last-child {
			margin-bottom: 0;
		}
	}

	// Post title
	> li > a {
		display: inline-block;
		font-family: var(--font-family-mono);
		font-size: var(--font-size-l);
		font-weight: var(--font-weight-strong);
		margin-bottom: 0;
	}

	// Post author
	.wp-block-latest-posts__post-author {
		margin: 0;
		color: var(--color-1);
		font-size: var(--font-size-s);
		font-family: var(--font-family-mono);
	}
	
	// Post date
	.wp-block-latest-posts__post-date {
		margin: 0;
		color: var(--color-1);
		font-size: var(--font-size-s);
		font-family: var(--font-family-mono);

		[class*="inner-container"] &,
		.has-background & {
			color: currentColor;
		}
	}

	// Post content
	.wp-block-latest-posts__post-excerpt,
	.wp-block-latest-posts__post-full-content {
		margin-top: rem(16px);
	}

	// Utility classes
	&.alignfull {
		padding-left: rem(8px);
		padding-right: rem(8px);

		.entry-content [class*="inner-container"] &,
		.entry-content .has-background & {
			padding-left: 0;
			padding-right: 0;
		}
	}

	// Block Styles
	&.is-style-darchitect-latest-posts-dividers {
		border-top: rem(8px) solid var(--color-1);
		border-bottom: rem(8px) solid var(--color-1);

		&:not(.is-grid) > li,
		> li {
			padding-bottom: rem(32px);
			border-bottom: rem(1px) dashed var(--color-1);
			margin-top: rem(32px);
			margin-bottom: rem(32px);

			&:last-child {
				padding-bottom: 0;
				border-bottom: none;
			}
		}

		&.is-grid {
			// Border moves up 1px to overlap the li borders in the last row.
			box-shadow: inset 0 rem(-1px) 0 0 var(--color-1);
			border-bottom: rem(1px) solid var(--color-1);

			li {
				margin: 0;
				padding-top: rem(32px);
				padding-right: rem(40px);

				&:last-child {
					padding-bottom: rem(32px);
				}
			}

			// This is using a non-standard media query because it is directly overriding the gutenberg-provided widths.
			// https://github.com/WordPress/gutenberg/blob/master/packages/block-library/src/latest-posts/style.scss#L28-L34
			@media screen and (min-width: 600px) {
				@for $i from 2 through 6 {
					&.columns-#{ $i } li {
						width: calc((100% / #{ $i }));
					}
				}
			}
		}
	}

	&.is-style-darchitect-latest-posts-borders {

		li {
			border: rem(1px) dashed var(--color-1);
			padding: rem(32px) rem(40px);

			&:last-child {
				padding-bottom: rem(32px);
			}
		}

		&:not(.is-grid) li {
			margin-top: rem(40px);
			margin-bottom: rem(40px);
		}
	}
}
